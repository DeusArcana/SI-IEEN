/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.Conexion;
import Clases.CrearPaseSalida;
import Clases.ExceptionDatosIncompletos;
import Clases.ManagerPases;
import Clases.ManagerUsers;
import Interfaces.PrincipalP;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author guillermo
 */
public class addSolicitudPermisos extends javax.swing.JDialog {
    
    ManagerUsers manager_users;
    ManagerPases manager_pases;
    
    Conexion cbd=new Conexion();
    Connection cn=cbd.getConexion();
    
    String fechag="";
    String responarea="";
    
    public int varidp=0;

    /**
     * Creates new form addSolicitudPermisos
     */
    public addSolicitudPermisos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        manager_users = new ManagerUsers();
        manager_pases = new ManagerPases();
        JTextFieldDateEditor date_Salida_Editor=(JTextFieldDateEditor) date_Salida.getDateEditor();
        date_Salida_Editor.setEditable(false);
        date_Salida.getJCalendar().setMinSelectableDate(new Date());
        
        Calendar c2 = new GregorianCalendar();
        date_Salida.setCalendar(c2);
        
    }

    public addSolicitudPermisos() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_addPermiso = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_Puesto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Actividad = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        comboArea = new javax.swing.JComboBox<>();
        comboEmpleados = new javax.swing.JComboBox<>();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        comboHorario = new javax.swing.JComboBox<>();
        comboAsunto = new javax.swing.JComboBox<>();
        Date hora = new Date();
        SpinnerDateModel sdm = new SpinnerDateModel(hora,null,null,Calendar.HOUR_OF_DAY);
        hora_e_s = new javax.swing.JSpinner(sdm);
        txt_hora_llegada = new javax.swing.JTextField();
        txt_horas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_Folio = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        date_Salida = new com.toedter.calendar.JDateChooser();
        jlfechacompleta = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro nueva solicitud");
        setPreferredSize(new java.awt.Dimension(590, 540));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_addPermiso.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pn_addPermiso.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Área:");
        pn_addPermiso.add(jLabel1);
        jLabel1.setBounds(90, 130, 36, 17);

        txt_Puesto.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_Puesto.setEnabled(false);
        pn_addPermiso.add(txt_Puesto);
        txt_Puesto.setBounds(140, 185, 410, 27);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Puesto:");
        pn_addPermiso.add(jLabel2);
        jLabel2.setBounds(70, 190, 54, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Asunto:");
        pn_addPermiso.add(jLabel3);
        jLabel3.setBounds(70, 340, 54, 17);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Hora de E/S:");
        pn_addPermiso.add(jLabel4);
        jLabel4.setBounds(40, 270, 86, 17);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Horas:");
        pn_addPermiso.add(jLabel5);
        jLabel5.setBounds(290, 310, 45, 17);

        txt_Actividad.setColumns(20);
        txt_Actividad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_Actividad.setRows(5);
        jScrollPane1.setViewportView(txt_Actividad);

        pn_addPermiso.add(jScrollPane1);
        jScrollPane1.setBounds(140, 342, 420, 90);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Folio:");
        pn_addPermiso.add(jLabel8);
        jLabel8.setBounds(390, 50, 37, 17);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Nombre:");
        pn_addPermiso.add(jLabel7);
        jLabel7.setBounds(70, 160, 60, 17);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Por horario:");
        pn_addPermiso.add(jLabel10);
        jLabel10.setBounds(50, 90, 80, 17);

        comboArea.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        comboArea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAreaActionPerformed(evt);
            }
        });
        pn_addPermiso.add(comboArea);
        comboArea.setBounds(140, 123, 410, 25);

        comboEmpleados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        comboEmpleados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEmpleadosActionPerformed(evt);
            }
        });
        pn_addPermiso.add(comboEmpleados);
        comboEmpleados.setBounds(140, 153, 410, 25);

        btnAceptar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/aceptar.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        pn_addPermiso.add(btnAceptar);
        btnAceptar.setBounds(180, 460, 120, 36);

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pn_addPermiso.add(btnCancelar);
        btnCancelar.setBounds(330, 460, 120, 36);

        comboHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "De Entrada", "Intermedio", "De Salida" }));
        comboHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboHorarioActionPerformed(evt);
            }
        });
        pn_addPermiso.add(comboHorario);
        comboHorario.setBounds(140, 83, 126, 28);

        comboAsunto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Particular", "Oficial", "Médico" }));
        pn_addPermiso.add(comboAsunto);
        comboAsunto.setBounds(423, 83, 126, 28);

        JSpinner.DateEditor de = new JSpinner.DateEditor(hora_e_s,"HH:mm");
        hora_e_s.setEditor(de);
        pn_addPermiso.add(hora_e_s);
        hora_e_s.setBounds(140, 260, 110, 28);

        txt_hora_llegada.setEditable(false);
        txt_hora_llegada.setEnabled(false);
        pn_addPermiso.add(txt_hora_llegada);
        txt_hora_llegada.setBounds(140, 300, 110, 28);

        txt_horas.setEditable(false);
        txt_horas.setText("00:00");
        txt_horas.setEnabled(false);
        pn_addPermiso.add(txt_horas);
        txt_horas.setBounds(340, 300, 110, 28);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Hora de llegada:");
        pn_addPermiso.add(jLabel11);
        jLabel11.setBounds(20, 310, 112, 17);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Por asunto:");
        pn_addPermiso.add(jLabel9);
        jLabel9.setBounds(330, 90, 80, 17);

        txt_Folio.setEditable(false);
        pn_addPermiso.add(txt_Folio);
        txt_Folio.setBounds(430, 40, 120, 28);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Fecha de entrada:");
        pn_addPermiso.add(jLabel12);
        jLabel12.setBounds(6, 230, 126, 17);

        date_Salida.setDateFormatString("d-MM-yyyy");
        date_Salida.setEnabled(false);
        date_Salida.setFocusable(false);
        pn_addPermiso.add(date_Salida);
        date_Salida.setBounds(140, 220, 215, 28);
        date_Salida.getDateEditor().addPropertyChangeListener(
            new java.beans.PropertyChangeListener() {
                @Override
                public void propertyChange(java.beans.PropertyChangeEvent e) {
                    if(e.getPropertyName().equals("date")) {
                        date_Salida.getJCalendar().setMinSelectableDate(date_Salida.getDate());
                    }
                }
            });

            jlfechacompleta.setText(".");
            pn_addPermiso.add(jlfechacompleta);
            jlfechacompleta.setBounds(230, 10, 320, 18);

            jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/formularios.png"))); // NOI18N
            pn_addPermiso.add(jLabel6);
            jLabel6.setBounds(0, 0, 590, 530);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pn_addPermiso, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(pn_addPermiso, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
            );

            getAccessibleContext().setAccessibleName("Nueva solicitud pase E/S");

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void comboEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEmpleadosActionPerformed
        // TODO add your handling code here:
        int empleado = comboEmpleados.getSelectedIndex();
        if(empleado > 0){
            txt_Puesto.setText(manager_pases.obtenerPuesto(comboEmpleados.getSelectedItem().toString()));
        }else{
            txt_Puesto.setText("");
        }

    }//GEN-LAST:event_comboEmpleadosActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try{
        SimpleDateFormat format=new SimpleDateFormat("HH:mm");
        String area=comboArea.getSelectedItem().toString();
        String[] foliocom=txt_Folio.getText().split("-");
        String folio=foliocom[0];
        String numero=foliocom[1];
        String[] año=fechag.split("-");
        String empleado=comboEmpleados.getSelectedItem().toString();
        String puesto=txt_Puesto.getText();
        String fecha="";
        String horaes=format.format((Date)hora_e_s.getValue());
        String horall="";
        String horas="";
        String estado="Aceptada";
        int h = comboHorario.getSelectedIndex();
        if(h==1){
                SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yyyy");
                fecha=sdf.format(date_Salida.getDate().getTime());
        }else{
            fecha=fechag;
        }
        
        if(h==2){
            horall="";   
            horas=txt_horas.getText();
        }else{
            horall="";
            horas="";
        }
        
        String tipohorario=comboHorario.getSelectedItem().toString();
        String tipoasunto=comboAsunto.getSelectedItem().toString();
        String asunto=txt_Actividad.getText();
            try{
                verificar_excepcion=true;
                validarDatos(true,"");

                //inserta solicitud
                insertar_Solicitud(folio,numero,año[2],empleado,puesto,area,fecha,horaes,horall,horas,tipohorario,tipoasunto,asunto,estado);
                //JOptionPane.showMessageDialog(this,area+"\n"+empleado+"\n"+puesto+"\n"+fecha+"\n"+horaes+"\n"+horall+"\n"+tipohorario+"\n"+tipoasunto+"\n"+asunto);
                //insertar_Solicitud(0);

            }catch(ExceptionDatosIncompletos e){
                if(verificar_excepcion)JOptionPane.showMessageDialog(this, e.getMessage());
                return;
            }
        }catch (NullPointerException ex) {
                javax.swing.JOptionPane.showMessageDialog(null, "Error! Faltan campos por llenar");
            }
        
        //SimpleDateFormat format=new SimpleDateFormat("h:mm:ss a");
        //System.out.print(format.format((Date)hora_e_s.getValue()));
        
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void comboAreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAreaActionPerformed
        // TODO add your handling code here:
        int area = comboArea.getSelectedIndex();
        //System.out.printf(area+"");
        String folio="";
        if(area > 0){
            String vaarea=comboArea.getSelectedItem().toString();
            //System.out.printf(vaarea);
            comboEmpleados.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
            comboEmpleados.addItem("Seleccione empleado...");
            manager_pases.getNombresEmpleadosArea(vaarea,comboEmpleados);
            //System.out.print(maxidpa());
            if(maxidpa()<=8){
                folio="00"+(maxidpa()+1);
            }
            if(maxidpa()>=9 && maxidpa()<=98){
                folio="0"+(maxidpa()+1);
            }
            if(maxidpa()>=99){
                folio=(maxidpa()+1)+"";
            }
            txt_Folio.setText(manager_pases.getAreaSiglas(vaarea)+"-"+folio);
            //System.out.printf(manager_pases.getAreaSiglas(vaarea));
            txt_Folio.setBackground(Color.GREEN);
            
        }else{
            System.out.printf("ERROR!! al cargar las areas");
        }
        
    }//GEN-LAST:event_comboAreaActionPerformed
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        comboArea.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));
        comboArea.addItem("Seleccione area...");
        comboEmpleados.addItem("Seleccione empleado...");
        manager_pases.getArea(comboArea);
        
        fechag=getfecha();
        
        jlfechacompleta.setText(fechacompleta()); 
        //System.out.print(maxidpa()+1);
        
        System.out.print(fechacompleta());
    }//GEN-LAST:event_formWindowOpened

    private void comboHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboHorarioActionPerformed
        // TODO add your handling code here:
        int h = comboHorario.getSelectedIndex();
        if(h==1){
           date_Salida.setEnabled(true); 
        }else{
            date_Salida.setEnabled(false);
        }
        if(h==2){
            txt_hora_llegada.setEnabled(true);
            txt_horas.setEnabled(true);
            //txt_hora_llegada.setEditable(true);
            //txt_horas.setText("00:00");
            txt_horas.setEditable(true);
            
        }else{
            txt_hora_llegada.setEnabled(false);
            txt_horas.setEnabled(false);
            txt_hora_llegada.setEditable(false);
            txt_horas.setEditable(false);
            //txt_horas.setText("");
            
        }
    }//GEN-LAST:event_comboHorarioActionPerformed

    public static String getfecha(){
        Date fecha=new Date();
        SimpleDateFormat formatofecha=new SimpleDateFormat("dd-MM-yyyy");
        return formatofecha.format(fecha);
    }
    public static String fechacompleta(){
        Date fecha=new Date();
        SimpleDateFormat formatofecha=new SimpleDateFormat("dd-MM-yyyy");
        String fechacom=formatofecha.format(fecha);
        String[] separar=fechacom.split("-");
        String mes="";
        int n=Integer.parseInt(separar[1]);
        switch(n){
            case 1:
                mes="Enero";
                break;
            case 2:
                mes="Febrero";
                break;
            case 3:
                mes="Marzo";
                break;
            case 4:
                mes="Abril";
                break;
            case 5:
                mes="Mayo";
                break;
            case 6:
                mes="Junio";
                break;
            case 7:
                mes="Julio";
                break;
            case 8:
                mes="Agosto";
                break;
            case 9:
                mes="Septiembre";
                break;
            case 10:
                mes="Octubre";
                break;
            case 11:
                mes="Noviembre";
                break;
            case 12:
                mes="Diciembre";
                break;
                
        }
        return "Tepic, Nayarit a "+separar[0]+" de "+mes+" del "+separar[2];
    }
    
    public void insertar_Solicitud(String folio,String numero,String año,String nombre,String puesto,String area,String fecha,String horaes,String horall,String horas,String tipohorario,String tipoasunto,String asunto,String estado){
        try{
            Conexion conexion=new Conexion();
            //conexion.getConexion();
            //Inserción de solicitud
            conexion.getConexion();
            
            boolean insersion = conexion.ejecutar("INSERT INTO solicitud_pase (Folio,Numero,Año,Nombre,Puesto,Area,Fecha,Hora_ES,Hora_Llegada,Horas,Tipo_Horario,Tipo_Asunto,Asunto,Estado) VALUES('"+folio+"','"+numero+"','"+año+"','"+nombre+"','"+puesto+"','"+area+"','"+fecha+"','"+horaes+"','"+horall+"','"+horas+"','"+tipohorario+"','"+tipoasunto+"','"+asunto+"','"+estado+"')");
            
            if(insersion){
                JOptionPane.showMessageDialog(this, "Insersión correcta");
                
                PrincipalP.tablapase.setModel(manager_pases.getTasolpa(año));
                
                CrearPaseSalida cps = new CrearPaseSalida();
                
                Object[] botones = {"Confirmar","Cancelar"};
                int opcion = JOptionPane.showOptionDialog(this,"¿Desea imprimir pase E/S?", "Confirmación",
                JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE  , null, botones, botones[0]);
                
                if(opcion == 0){
                    //sacamos el id del area del responsable
                    String idarea=manager_pases.getIdResponsableArea(area);
                    //sacamos el nombre del responsable
                    responarea=manager_pases.getNomResponsableArea(idarea);
                    
                    cps.createTicket(1,folio,numero,nombre,puesto,area,fecha,horaes,horall,horas,tipohorario,tipoasunto,asunto,responarea);
                
                this.setVisible(false);
                }else if(opcion == 1){
                    //cerramos el formulario
                    this.setVisible(false);
                }
        
                //this.setVisible(false);
            }else{
                JOptionPane.showMessageDialog(this, "Error al insertar");
            }
        }catch(Exception e){
          
        }
    }
    
    
    public void validarDatos(boolean verificar_fecha,String cad)throws ExceptionDatosIncompletos{
       
        if(txt_Actividad.getText().equals("")){
            if(cad.equals("")){
                cad+="-No se ha insertado ninguna actividad, escriba la acitividad y vuelva a intentarlo";
            }
            else{
                cad+="\n-No se ha insertado ninguna actividad, escriba la acitividad y vuelva a intentarlo";
            }
        }
    
        if(comboEmpleados.getSelectedItem().toString().equals("Seleccione empleado...")){
            if(cad.equals("")){
                cad+="-No se ha seleccionado el empleado, seleccione uno de los empleados y vuelva a intentarlo";
            }
            else{
                cad+="\n-No se ha seleccionado el empleado, seleccione uno de los empleados y vuelva a intentarlo";
            }
        }
        if(comboArea.getSelectedItem().toString().equals("Seleccione area...")){
            if(cad.equals("")){
                cad+="-No se ha seleccionado el area, vuelva a intentarlo";
            }
            else{
                cad+="\n-No se ha seleccionado el area, vuelva a intentarlo";
            }
        }
        if(comboHorario.getSelectedItem().toString().equals("Seleccione...")){
            if(cad.equals("")){
                cad+="-No se ha seleccionado el tipo de horario, vuelva a intentarlo";
            }
            else{
                cad+="\n-No se ha seleccionado el tipo de horario, vuelva a intentarlo";
            }
        }
        if(comboAsunto.getSelectedItem().toString().equals("Seleccione...")){
            if(cad.equals("")){
                cad+="-No se ha seleccionado el tipo de asunto, vuelva a intentarlo";
            }
            else{
                cad+="\n-No se ha seleccionado el tipo de asunto, vuelva a intentarlo";
            }
        }
        if(txt_horas.getText().split(":").length!=2){
            if(cad.equals("")){ 
                cad+="-El Formato de horas debe ser 00:00, vuelva a intentarlo";
            }
            else{
                cad+="\n-El Formato de horas debe ser 00:00, vuelva a intentarlo";
            }
        }
        if(txt_Puesto.getText().equals("")){
            if(cad.equals("")){
                cad+="-No se ha insertado el puesto del empleado, escriba el nombre del empleado y vuelva a intentarlo";
            }
            else{
                cad+="\n-No se ha insertado el puesto del empleado, escriba el nombre del empleado y vuelva a intentarlo";
            }
        }
        if(txt_Folio.getText().equals("")){
            if(cad.equals("")){
                cad+="-No se ha insertado el folio, vuelva a intentarlo";
            }
            else{
                cad+="\n-No se ha insertado el folio, vuelva a intentarlo";
            }
        }
        
        if(!cad.equals("")){
            throw new ExceptionDatosIncompletos(cad);
        }else{
            return;
        }
    }
    
    public int maxidpa(){
        int a=comboArea.getSelectedIndex();
        //String ar=comboArea.getSelectedItem().toString();
        String[] año=fechag.split("-");
        String sql="";
        if(a > 0){
            String ar=comboArea.getSelectedItem().toString();
            sql="Select max(Numero) from solicitud_pase where Area = '" + ar + "' AND Año = '" + año[2] + "';";            
        }     
        //String area="Unidad Técnica de Informática y Estadística";
        //sql="Select max(Numero) from solicitud_pase where Area = '"+area+"';";
        int max=0; 
        try{
            Statement st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                
             //varidp=rs.getInt("max(Numero)");
             max=rs.getInt("max(Numero)");
             
        }
    }catch(SQLException ex){
           javax.swing.JOptionPane.showMessageDialog(null, "Error!!"); 
        }
        return max;
    }
    
    private boolean verificar_excepcion=true;
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addSolicitudPermisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addSolicitudPermisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addSolicitudPermisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addSolicitudPermisos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                addSolicitudPermisos dialog = new addSolicitudPermisos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> comboArea;
    private javax.swing.JComboBox<String> comboAsunto;
    private javax.swing.JComboBox<String> comboEmpleados;
    private javax.swing.JComboBox<String> comboHorario;
    private com.toedter.calendar.JDateChooser date_Salida;
    private javax.swing.JSpinner hora_e_s;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlfechacompleta;
    private javax.swing.JPanel pn_addPermiso;
    private javax.swing.JTextArea txt_Actividad;
    private javax.swing.JTextField txt_Folio;
    private javax.swing.JTextField txt_Puesto;
    private javax.swing.JTextField txt_hora_llegada;
    private javax.swing.JTextField txt_horas;
    // End of variables declaration//GEN-END:variables
}
